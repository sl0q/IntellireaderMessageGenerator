Mifare Classic Authentication on Clear Key
0x49 0x52 0x0 0x23 0x1 0x5 0x1 0xA 0x1E 0x8 0x0 0x10 0x0 0x1A 0x18 0x5C 0x78 0x66 0x66 0x5C 0x78 0x66 0x66 0x5C 0x78 0x66 0x66 0x5C 0x78 0x66 0x66 0x5C 0x78 0x66 0x66 0x5C 0x78 0x66 0x66 0x1E 0x28 
SVIAIwEFAQoeCAAQABoYXHhmZlx4ZmZceGZmXHhmZlx4ZmZceGZmHig=
mfr_classic_auth_on_clear_key {
  sector_number: 0
  key_type: TYPE_A
  clear_key: "\\xff\\xff\\xff\\xff\\xff\\xff"
}


###################################################################


Mifare Classic Authentication on Key from SAMAV2
0x49 0x52 0x0 0x15 0x2 0x5 0x1 0x12 0x10 0x8 0x1 0x10 0x0 0x1A 0x8 0x8 0x3 0x10 0x3 0x18 0x0 0x20 0x0 0x20 0x0 0xA0 0xF4 
SVIAFQIFARIQCAEQABoICAMQAxgAIAAgAKD0
mfr_classic_auth_on_sam_key {
  sector_number: 1
  key_type: TYPE_A
  av2_args {
    slot: SAM3_SLOT
    key_number: 3
    key_version: 0
    channel: AV2_CHANNEL_0
  }
  need_diversification: false
}


###################################################################


Mifare Classic Read Data Blocks
0x49 0x52 0x0 0x9 0x3 0x5 0x1 0x1A 0x4 0x8 0x0 0x10 0x3 0xA3 0xD5 
SVIACQMFARoECAAQA6PV
mfr_classic_read_blocks {
  start_block: 0
  block_count: 3
}


###################################################################


Mifare Classic Write Data Blocks
0x49 0x52 0x0 0x8B 0x4 0x5 0x1 0x22 0x85 0x1 0x8 0x1 0x12 0x80 0x1 0x5C 0x78 0x30 0x30 0x5C 0x78 0x30 0x31 0x5C 0x78 0x30 0x32 0x5C 0x78 0x30 0x33 0x5C 0x78 0x30 0x34 0x5C 0x78 0x30 0x35 0x5C 0x78 0x30 0x36 0x5C 0x78 0x30 0x37 0x5C 0x78 0x30 0x38 0x5C 0x78 0x30 0x39 0x5C 0x78 0x30 0x61 0x5C 0x78 0x30 0x62 0x5C 0x78 0x30 0x63 0x5C 0x78 0x30 0x64 0x5C 0x78 0x30 0x65 0x5C 0x78 0x30 0x66 0x5C 0x78 0x31 0x30 0x5C 0x78 0x31 0x31 0x5C 0x78 0x31 0x32 0x5C 0x78 0x31 0x33 0x5C 0x78 0x31 0x34 0x5C 0x78 0x31 0x35 0x5C 0x78 0x31 0x36 0x5C 0x78 0x31 0x37 0x5C 0x78 0x31 0x38 0x5C 0x78 0x31 0x39 0x5C 0x78 0x31 0x61 0x5C 0x78 0x31 0x62 0x5C 0x78 0x31 0x63 0x5C 0x78 0x31 0x64 0x5C 0x78 0x31 0x65 0x5C 0x78 0x31 0x66 0x62 0x3B 
SVIAiwQFASKFAQgBEoABXHgwMFx4MDFceDAyXHgwM1x4MDRceDA1XHgwNlx4MDdceDA4XHgwOVx4MGFceDBiXHgwY1x4MGRceDBlXHgwZlx4MTBceDExXHgxMlx4MTNceDE0XHgxNVx4MTZceDE3XHgxOFx4MTlceDFhXHgxYlx4MWNceDFkXHgxZVx4MWZiOw==
mfr_classic_write_blocks {
  start_block: 1
  data: "\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0a\\x0b\\x0c\\x0d\\x0e\\x0f\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f"
}


###################################################################


Mifare Classic Get Counter Value
0x49 0x52 0x0 0x7 0x5 0x5 0x1 0x32 0x2 0x8 0x1 0x67 0x92 
SVIABwUFATICCAFnkg==
mfr_classic_get_counter {
  src_block: 1
}


###################################################################


Mifare Classic Set Counter Value
0x49 0x52 0x0 0x12 0x6 0x5 0x1 0x3A 0xD 0x8 0x1 0x10 0x9C 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0xFF 0x1 0x95 0xD1 
SVIAEgYFAToNCAEQnP//////////AZXR
mfr_classic_set_counter {
  dst_block: 1
  value: -100
}


###################################################################


Mifare Classic Modify Counter Value
0x49 0x52 0x0 0xB 0x7 0x5 0x1 0x42 0x6 0x8 0x1 0x10 0x1 0x18 0x1 0x6F 0xCF 
SVIACwcFAUIGCAEQARgBb88=
mfr_classic_modify_counter {
  src_block: 1
  operand: 1
  dst_block: 1
}


###################################################################


Mifare Classic Copy Counter Value
0x49 0x52 0x0 0x9 0x8 0x5 0x1 0x4A 0x4 0x8 0x1 0x10 0x2 0xF0 0xEB 
SVIACQgFAUoECAEQAvDr
mfr_classic_copy_counter {
  src_block: 1
  dst_block: 2
}


###################################################################


Mifare Classic Commit Counter Value
0x49 0x52 0x0 0x7 0x9 0x5 0x1 0x52 0x2 0x8 0x2 0x5C 0x48 
SVIABwkFAVICCAJcSA==
mfr_classic_commit_counter {
  dst_block: 2
}


###################################################################


Mifare Classic Bulk operation
0x49 0x52 0x0 0x77 0xA 0x5 0x1 0x2A 0x72 0xA 0x20 0xA 0x1E 0x8 0x0 0x10 0x0 0x1A 0x18 0x5C 0x78 0x66 0x66 0x5C 0x78 0x66 0x66 0x5C 0x78 0x66 0x66 0x5C 0x78 0x66 0x66 0x5C 0x78 0x66 0x66 0x5C 0x78 0x66 0x66 0xA 0x46 0x22 0x44 0x8 0x1 0x12 0x40 0x5C 0x78 0x30 0x30 0x5C 0x78 0x30 0x31 0x5C 0x78 0x30 0x32 0x5C 0x78 0x30 0x33 0x5C 0x78 0x30 0x34 0x5C 0x78 0x30 0x35 0x5C 0x78 0x30 0x36 0x5C 0x78 0x30 0x37 0x5C 0x78 0x30 0x38 0x5C 0x78 0x30 0x39 0x5C 0x78 0x30 0x61 0x5C 0x78 0x30 0x62 0x5C 0x78 0x30 0x63 0x5C 0x78 0x30 0x64 0x5C 0x78 0x30 0x65 0x5C 0x78 0x30 0x66 0xA 0x6 0x1A 0x4 0x8 0x1 0x10 0x1 0xEB 0x1B 
SVIAdwoFASpyCiAKHggAEAAaGFx4ZmZceGZmXHhmZlx4ZmZceGZmXHhmZgpGIkQIARJAXHgwMFx4MDFceDAyXHgwM1x4MDRceDA1XHgwNlx4MDdceDA4XHgwOVx4MGFceDBiXHgwY1x4MGRceDBlXHgwZgoGGgQIARAB6xs=
mfr_classic_bulk_operation {
  operations {
    auth_on_clear_key {
      sector_number: 0
      key_type: TYPE_A
      clear_key: "\\xff\\xff\\xff\\xff\\xff\\xff"
    }
  }
  operations {
    write_blocks {
      start_block: 1
      data: "\\x00\\x01\\x02\\x03\\x04\\x05\\x06\\x07\\x08\\x09\\x0a\\x0b\\x0c\\x0d\\x0e\\x0f"
    }
  }
  operations {
    read_blocks {
      start_block: 1
      block_count: 1
    }
  }
}


###################################################################


